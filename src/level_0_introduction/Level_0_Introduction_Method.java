package level_0_introduction;

import java.util.ArrayList;
import java.util.List;

public class Level_0_Introduction_Method {
	
	//Level 0 입문
	
	//1번
//	public int solution(int[] common) {
//		
//		int res; //결과값을 담을 변수
//		
//		if(common[0] - common[1] == common[1] - common[2]) { //등차수열인지 확인
//			int a = common[1] - common[0]; //등차수열이 맞다면 공차를 구하고
//			res = common[common.length-1] + a; //마지막원소 + 공차
//		} else { //등차수열이 아니라면
//			int a = common[1] / common[0]; //공비를 구하고
//			res = common[common.length-1] * a; //마지막원소 * 공비
//		}
//		return res;
//	}
	
	
	
	
	
	
	
	//--------------------------------------------------------------------------
	
	
	
	
	
	
	
	//2번
//	public int[] solution(int num, int total) {
//		
//		int[] res = new int[num]; //값을 담을 배열
//		
//		for(int i = -50; i <= 1000; i++) { // num의 최대값인 100과 total의 최대값인 1000을 이용해 모든 경우의 수를 계산했을때
//										   // 나올수 있는 원소가 -50부터 1000이기 때문에 반복문을 통해 돌려준다.			
//			int idx = 0; //인덱스값으로 사용
//			
//			for(int j = i; j < i+num; j++) { //-50부터 순차적으로 num의 갯수만큼 배열에 담고
//				res[idx] = j;
//				idx++;
//			}			
//			
//			int sum = 0;
//			
//			idx = 0;
//			
//			for(int j = 0; j < res.length; j++) { //배열에 담긴 원소의 합이 total인지를 확인한다.
//				sum+=res[idx];
//				idx++;
//			}
//			
//			if(sum == total) { //원소의 합이 total이라면
//				break; //반복문 종료후 배열 반환, 아니라면 다음 원소로 넘어간다.
//			}
//		}
//		return res;
//	}

	
	
	
	
	
	
	//--------------------------------------------------------------------------
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}
